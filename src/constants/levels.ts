const START_POSITION_WORDS = [
  "house",
  "honest",
  "tone",
  "auto",
  "shout",
  "east",
  "tuna",
  "hates",
  "heat",
  "sauna",
  "shot",
  "haste",
  "hate",
  "host",
  "south",
  "haunt",
  "notes",
  "ash",
  "thou",
  "oats",
  "hunt",
  "onus",
  "set",
  "hen",
  "nest",
  "seat",
  "nose",
  "out",
  "toes",
  "sue",
  "tense",
  "hasten",
  "hens",
  "unset",
  "shun",
  "onset",
  "hast",
  "teashop",
  "snout",
  "haunts",
  "saute",
  "ethos",
];
const HOME_ROW_WORDS = [
  "house",
  "stone",
  "honest",
  "tone",
  "auto",
  "shout",
  "east",
  "tuna",
  "hates",
  "heat",
  "sauna",
  "shot",
  "haste",
  "hate",
  "host",
  "south",
  "haunt",
  "notes",
  "honu",
  "ash",
  "thou",
  "oats",
  "hunt",
  "onus",
  "set",
  "hen",
  "nest",
  "seat",
  "nose",
  "out",
  "toes",
  "sue",
  "tense",
  "shine",
  "sand",
  "hound",
  "unite",
  "soda",
  "stood",
  "saint",
  "tides",
  "hide",
  "idea",
  "untie",
  "hasten",
  "stud",
  "hens",
  "sound",
  "sainted",
  "shade",
  "side",
  "unset",
  "tine",
  "stand",
  "outside",
  "ousted",
  "detain",
  "suit",
  "douse",
  "united",
  "suited",
  "shun",
  "onset",
  "hushed",
  "tainted",
  "hidden",
  "stunned",
  "snide",
  "hast",
  "adieu",
  "teashop",
  "toad",
  "hint",
  "snout",
  "haunts ",
];

const shuffle = (array: string[]) =>
  array
    .map((value) => ({ value, sort: Math.random() }))
    .sort((a, b) => a.sort - b.sort)
    .map(({ value }) => value);

export const WORD_COUNT = 100;

const createText = (words: string[]) =>
  Array(Math.ceil(words.length / WORD_COUNT))
    .fill(0)
    .flatMap(() => shuffle(words))
    .slice(0, WORD_COUNT)
    .join(" ");

export const LEVELS = [
  {
    title: "1 - Home row, 8 keys (start positions)",
    text: () => createText(START_POSITION_WORDS),
    include: "aoeuhtns",
  },
  {
    title: "2 - Home row, 10 keys",
    text: () => createText(HOME_ROW_WORDS),
    include: "aoeuidhtns",
  },
];
